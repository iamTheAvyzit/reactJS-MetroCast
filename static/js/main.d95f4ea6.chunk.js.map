{"version":3,"sources":["App.js","index.js"],"names":["App","dateStr","arrow","useState","loc","setLoc","locFrmBttn","setlocFrmBttn","searchStr","setSearchStr","icon","text","temp_c","temp_f","wind_mph","wind_dir","precip_mm","humidity","curr","setCurr","day0_date","day1_date","day2_date","day0","day1","day2","day0_icon","day1_icon","day2_icon","fore","setFore","URL","useEffect","a","fetch","then","res","json","location","current","forecast","condition","forecastday","date","day","catch","err","console","log","message","window","alert","class","localtime","Date","toLocaleString","weekday","name","src","region","dir","getArrows","maxtemp_c","mintemp_c","type","placeholder","onChange","e","target","value","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d95f4ea6.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const arrow = ['ðŸ¡°','ðŸ¡²','ðŸ¡±','ðŸ¡³','ðŸ¡´','ðŸ¡µ','ðŸ¡¶','ðŸ¡·']\n\n  const [loc, setLoc] = useState({})\n  const [locFrmBttn, setlocFrmBttn] = useState('london')\n  const [searchStr, setSearchStr] = useState('london')\n  const [curr, setCurr] = useState({\n    icon: '',\n    text: '',\n    temp_c: '',\n    temp_f: '',\n    wind_mph: '',\n    wind_dir: '',\n    precip_mm: '',\n    humidity: ''\n  })\n  const [fore, setFore] = useState({\n    day0_date:'',\n    day1_date:'',\n    day2_date:'',\n    day0: [],\n    day1: [],\n    day2: [],\n    day0_icon: '',\n    day1_icon: '',\n    day2_icon: ''\n  })\n\n  const handleClick = () => {\n    setlocFrmBttn(searchStr)\n  }\n  \n  const URL = `https://api.weatherapi.com/v1/forecast.json?key=86ff03a764544a5996874132210611&days=3&q=${locFrmBttn}`;\n  \n  useEffect(async () => {\n    await fetch(URL)\n    .then((res) => res.json())\n    .then(({location, current, forecast}) => {\n      setLoc(location);\n      setCurr({\n        icon: current.condition.icon,\n        text: current.condition.text,\n        temp_c: current.temp_c,\n        temp_f: current.temp_f,\n        wind_mph: current.wind_mph,\n        wind_dir: current.wind_dir,\n        precip_mm: current.precip_mm,\n        humidity: current.humidity\n      });\n      setFore({\n        day0_date: forecast.forecastday[0].date,\n        day1_date: forecast.forecastday[1].date,\n        day2_date: forecast.forecastday[2].date,\n        day0: forecast.forecastday[0].day,\n        day1: forecast.forecastday[1].day,\n        day2: forecast.forecastday[2].day,\n        day0_icon: forecast.forecastday[0].day.condition.icon,\n        day1_icon: forecast.forecastday[1].day.condition.icon,\n        day2_icon: forecast.forecastday[2].day.condition.icon\n      });\n    })\n    .catch((err) => {\n      console.log(err.message)\n      window.alert(\"Sorry! â˜¹ City Not Found! 404 Please Reload ðŸ˜µ\")\n    });\n\n  }, [locFrmBttn]);\n\n  const getDay = (dateStr) => {\n    var date = new Date(dateStr).toLocaleString('en-US', {weekday:'long'});\n    return date;\n  };\n\n  const getArrows = (dir) => {\n    switch(dir){\n      case \"SSE\":\n      case \"SE\":\n      case \"ESE\": return arrow[6];\n      break;\n      case \"NNE\":\n      case \"NE\":\n      case \"ENE\": return arrow[5];\n      break;\n      case \"NNW\":\n      case \"NW\":\n      case \"WNW\": return arrow[4];\n      break\n      case \"WSW\":\n      case \"SW\":\n      case \"SSW\": return arrow[7];\n      break\n      case \"S\": return arrow[3];\n      case \"N\": return arrow[2];\n      case \"E\": return arrow[1];\n      case \"W\": return arrow[0];\n      default: return dir;\n    };\n  };\n\n  return (\n    <div class=\"container\">\n    <div class=\"weather-side\">\n      <div class=\"weather-gradient\"></div>\n      <div class=\"date-container\">\n        <h2 class=\"date-dayname\">{getDay(loc.localtime)}</h2><span class=\"date-day\">{loc.name}</span><img class=\"location-icon\" src=\"https://img.icons8.com/ios/50/ffffff/worldwide-location.png\"/><span class=\"location\">{loc.region}</span>\n      </div>\n      <div class=\"weather-container\"><img class=\"weather-icon\" src={curr.icon}/>\n        <h1 class=\"weather-temp\">{curr.temp_c} Â°C | {curr.temp_f} Â°F</h1>\n        <h3 class=\"weather-desc\">{curr.text}</h3>\n      </div>\n    </div>\n    <div class=\"info-side\">\n      <div class=\"today-info-container\">\n        <div class=\"today-info\">\n          <div class=\"precipitation\"> <span class=\"title\">PRECIPITATION</span><span class=\"value\">{curr.precip_mm}%</span>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"humidity\"> <span class=\"title\">HUMIDITY</span><span class=\"value\">{curr.humidity}%</span>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"wind\"> <span class=\"title\">WIND</span><span class=\"value\">{curr.wind_mph} mph</span>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"wind-dir\"> <span class=\"title\">WIND DIR</span><span class=\"value\">{getArrows(curr.wind_dir)}</span>\n            <div class=\"clear\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"week-container\">\n        <ul class=\"week-list\">\n          <li class=\"active\"><img class=\"day-icon\" src={fore.day0_icon}/><span class=\"day-name\">{fore.day0_date}</span><span class=\"day-temp\">{fore.day0.maxtemp_c}Â°C | {fore.day0.mintemp_c}Â°C</span></li>\n          <li><img class=\"day-icon\" src={fore.day1_icon}/><span class=\"day-name\">{fore.day1_date}</span><span class=\"day-temp\">{fore.day1.maxtemp_c}Â°C | {fore.day1.mintemp_c}Â°C</span></li>\n          <li><img class=\"day-icon\" src={fore.day2_icon}/><span class=\"day-name\">{fore.day2_date}</span><span class=\"day-temp\">{fore.day2.maxtemp_c}Â°C | {fore.day2.mintemp_c}Â°C</span></li>\n          <div class=\"clear\"></div>\n        </ul>\n      </div>\n      <div class=\"location-container\">\n        <input class=\"location-button\" type='text' placeholder='search a city...' onChange={(e) => setSearchStr(e.target.value)}/>\n        <button class=\"location-button\" onClick={handleClick}><span>Get Weather</span></button>\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}